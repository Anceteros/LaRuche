<!-- Automatically generated by bin/oefdoc.pl -->
var oefparm4name= 'Possibilités avancées';
 var oefparm4= [ 'pari(  )', 'maxima(  )', 'yacas(  )', 'wims(  )', 'draw(  )', 'slib(  )', 'teximg(  )' ];
function oefparm4fun(instruction){
    switch(instruction)
	{
	case 'pari(  )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>pari(factor(2^101-1))</code></div>'+
'<div class="explication"><div class="title">Explication</div>appel de PARI/GP: ici pour factoriser un entier (utiliser en général de préférence avec &#92;text{})</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'maxima(  )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>maxima(integrate(x^2+1,x);)</code></div>'+
'<div class="explication"><div class="title">Explication</div>appel de Maxima: ici pour intégrer une fonction</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'yacas(  )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>yacas(Taylor(x,0,10) cos(x^2+x+1))</code></div>'+
'<div class="explication"><div class="title">Explication</div>appel de Yacas: ici pour calculer un développement de Taylor</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'wims(  )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>wims(sort items &#92;list) wims(listintersect &#92;list1 and &#92;list2)</code></div>'+
'<div class="explication"><div class="title">Explication</div>utilisation de commandes wims (deux exemples : la première utilise la commande wims !sort pour ordonner les items de la liste &#92;list, la seconde utilise la commande wims !listintersect pour obtenir les items communs des listes &#92;list1 et &#92;list2)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'draw(  )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>draw(pixel_size_x,pixel_size_y<br/>draw_source)</code></div>'+
'<div class="explication"><div class="title">Explication</div>dessiner, le source est le même que pour la commande &#92;draw, la première ligne étant formée de la taille de l\'image en pixels. La sortie est l\'adresse URL de l\'image.</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'slib(  )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>slib(matrix/invertible 3,5)</code></div>'+
'<div class="explication"><div class="title">Explication</div>bibliothèque de scripts, par exemple, ici une matrice inversible 3x3 dont les coefficients sont inférieurs à 5.</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'teximg(  )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>teximg( &#92;(&#92;displaystyle{&#92;frac{3}{4}}&#92;) )</code></div>'+
'<div class="explication"><div class="title">Explication</div>crée une image d\'un texte mathématique. La sortie est l\'adresse URL de l\'image. Elle peut être recopiée dans un dessin créé avec Flydraw.</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	
	}
}