<!-- Automatically generated by bin/oefdoc.pl -->
var oefparm2name= 'Données et manipulations de listes';
 var oefparm2= [ ' items( ) ', ' item( ) ', ' item( .. , ) ', ' item([ , ], ) ', ' position( ) ', ' rows( ) ', ' row( , ) ', ' row( .. , ) ', ' row([ , ], ) ', ' row(  , ) ', ' randomitem( ) ', ' randomrow( ) ', ' column( , ) ', ' column( .. , ) ', ' column([ , ], ) ', ' asis( ) ', ' htmlmath( ) ', ' texmath( ) ' ];
function oefparm2fun(instruction){
    switch(instruction)
	{
	case ' items( ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>items(a,b,c,d,e,f)</code></div>'+
'<div class="explication"><div class="title">Explication</div>le nombre d\'items de la liste {a,b,c,d,e,f} (6 dans cet exemple)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' item( ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>item(3,a,b,c,d,e,f)</code></div>'+
'<div class="explication"><div class="title">Explication</div>item numéro 3 de la liste {a,b,c,d,e,f} (ici c) ; <span class="tt wims_code_words">item(3,&#92;ll)</span> est l\'item numéro 3 de la liste &#92;ll (de manière équivalente : :&#92;ll[3])</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' item( .. , ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>item(2..5,a,b,c,d,e,f)</code></div>'+
'<div class="explication"><div class="title">Explication</div>items numéros 2 à 5 de la liste {a,b,c,d,e,f} (ici b,c,d,e)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' item([ , ], ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>item([2,4],&#92;ll)</code></div>'+
'<div class="explication"><div class="title">Explication</div>items numéros 2 et 4 de la liste &#92;ll (de manière équivalente &#92;ll[2,4])</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' position( ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>position(make,do,go,make,take)</code></div>'+
'<div class="explication"><div class="title">Explication</div>numéros des positions de l\'item `make\' dans la liste {do,go,make,take} (ici 3)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' rows( ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>rows(&#92;m)</code></div>'+
'<div class="explication"><div class="title">Explication</div>nombre de lignes de la matrice &#92;m</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' row( , ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>row(2,&#92;m)</code></div>'+
'<div class="explication"><div class="title">Explication</div>ligne numéro 2 de la matrice &#92;m (de manière équivalente : <span class="tt wims_code_variable">&#92;m[2;]</span>)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' row( .. , ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>row(2..5,&#92;m)</code></div>'+
'<div class="explication"><div class="title">Explication</div>la matrice extraite de &#92;m formée des lignes numéros 2 à 5 (de manière équivalente :</div>'+
'<div class="explication"><div class="title">Explication</div><span class="tt wims_code_variable">&#92;m[2..5;]</span>)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' row([ , ], ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>row([1,3],1,2,3<br/>3,4,5<br/>5,6,7)</code></div>'+
'<div class="explication"><div class="title">Explication</div>la matrice extraite de la matrice 3&times;3 formée de la première ligne et de la troisième ligne</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' row(  , ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>row(column 1 > 1 and column 2 = good,&#92;mat)</code></div>'+
'<div class="explication"><div class="title">Explication</div>la matrice extraite de &#92;mat formée des lignes dont la colonne 1 est > 1 et dont la colonne 2 est le mot `good\'</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' randomitem( ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>randomitem(&#92;list)</code></div>'+
'<div class="explication"><div class="title">Explication</div>un item au hasard de la liste &#92;list (items séparés par des virgules).</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' randomrow( ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>randomrow(&#92;mat)</code></div>'+
'<div class="explication"><div class="title">Explication</div>une ligne au hasard de la matrice &#92;mat.</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' column( , ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>column(2,&#92;m)</code></div>'+
'<div class="explication"><div class="title">Explication</div>les items de la colonne numéro 2 de la matrice &#92;m, le résultat est une liste séparée par des virgules (de manière équivalente :&#92;m[;2])</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' column( .. , ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>column(2..5,&#92;m)</code></div>'+
'<div class="explication"><div class="title">Explication</div>la matrice extraite de &#92;m formée des colonnes numéros 2 à 5 (de manière équivalente :</div>'+
'<div class="explication"><div class="title">Explication</div><span class="tt wims_code_variable">&#92;m[;2..5]</span>)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' column([ , ], ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>column([1,3],1,2,3<br/>3,4,5<br/>5,6,7)</code></div>'+
'<div class="explication"><div class="title">Explication</div>la matrice extraite de la matrice 3&times;3 formée de la première et de la troisième colonne</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' asis( ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>asis(Comment ça va? item(1,2,3))</code></div>'+
'<div class="explication"><div class="title">Explication</div>la chaîne de caractères telle qu\'elle est sans aucune substitution ou interprétation.</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' htmlmath( ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>htmlmath(2*x^2+3*x)</code></div>'+
'<div class="explication"><div class="title">Explication</div>la manière la meilleure possible de rendre l\'expression en html: 2x<sup>2</sup>+3x</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case ' texmath( ) ' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>texmath(2*x^2+3*x)</code></div>'+
'<div class="explication"><div class="title">Explication</div>le source TeX de l\'expression</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	
	}
}